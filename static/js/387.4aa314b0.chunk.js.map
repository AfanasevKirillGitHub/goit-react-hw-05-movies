{"version":3,"file":"static/js/387.4aa314b0.chunk.js","mappings":"kSAEaA,EAAcC,EAAAA,GAAAA,GAAH,kLAWXC,EAAcD,EAAAA,GAAAA,GAAH,kGAMXE,EAASF,EAAAA,GAAAA,EAAH,mIAONG,EAAUH,EAAAA,GAAAA,EAAH,yJ,SCcpB,EAlCgB,WACd,OAA4CI,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,IAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAkBJ,GAF3B,gBAENK,EAFM,EAENA,KACRN,EAAkBM,EAAKC,SAHT,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfL,GACD,GAAE,CAACH,IAECF,EAIL,OACE,+BAC8B,IAA1BA,EAAeW,SAAgB,SAAC,KAAD,+BADnC,KAEE,SAACjB,EAAD,UACGM,EAAeY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAClB,UAACnB,EAAD,YACE,SAACC,EAAD,UAASiB,KACT,SAAChB,EAAD,UAAUiB,MAFMF,EADA,QAS3B,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  padding: 20px;\n  list-style: none;\n  margin: 0 auto;\n  max-width: 800px;\n  text-align: center;\n`;\n\nexport const ReviewsItem = styled.li`\n  padding: 20px;\n  background-color: #ffffff80;\n  border-radius: 50px;\n`;\n\nexport const Author = styled.b`\n  font-family: 'Ubuntu';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 24px;\n  color: black;\n`;\nexport const Content = styled.p`\n  font-family: 'Ubuntu';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  color: black;\n  font-weight: bold;\n`;\n","import { Title } from 'pages/HomePage/HomePage.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieByReviews } from 'services/movieAPI';\nimport { Author, Content, ReviewsItem, ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviewsDetails, setReviewsDetails] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await getMovieByReviews(movieId);\n        setReviewsDetails(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  if (!reviewsDetails) {\n    return;\n  }\n\n  return (\n    <div>\n      ({reviewsDetails.length === 0 && <Title>No reviews found</Title>})\n      <ReviewsList>\n        {reviewsDetails.map(({ id, author, content }) => (\n          <ReviewsItem key={id}>\n            <Author>{author}</Author>\n            <Content>{content}</Content>\n          </ReviewsItem>\n        ))}\n      </ReviewsList>\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["ReviewsList","styled","ReviewsItem","Author","Content","useState","reviewsDetails","setReviewsDetails","movieId","useParams","useEffect","fetchData","getMovieByReviews","data","results","console","log","length","map","id","author","content"],"sourceRoot":""}