{"version":3,"file":"static/js/186.bdbf2735.chunk.js","mappings":"+NAoCA,UAhCgB,WACd,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,IAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAkBJ,GAF3B,gBAENK,EAFM,EAENA,KACRN,EAAkBM,EAAKC,SAHT,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfL,GACD,GAAE,CAACH,IAECF,EAIL,OACE,2BACGA,EAAeW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAClB,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EADS,IAMO,IAA1BZ,EAAee,SAAgB,8CAGrC,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieByReviews } from 'services/movieAPI';\n\nconst Reviews = () => {\n  const [reviewsDetails, setReviewsDetails] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await getMovieByReviews(movieId);\n        setReviewsDetails(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  if (!reviewsDetails) {\n    return;\n  }\n\n  return (\n    <div>\n      {reviewsDetails.map(({ id, author, content }) => (\n        <li key={id}>\n          <b>{author}</b>\n          <p>{content}</p>\n        </li>\n      ))}\n      {reviewsDetails.length === 0 && <p>No reviews found</p>}\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["useState","reviewsDetails","setReviewsDetails","movieId","useParams","useEffect","fetchData","getMovieByReviews","data","results","console","log","map","id","author","content","length"],"sourceRoot":""}