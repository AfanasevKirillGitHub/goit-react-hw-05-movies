{"version":3,"file":"static/js/720.f988eaf2.chunk.js","mappings":"0RAEaA,EAAOC,EAAAA,GAAAA,KAAH,kKAWJC,EAAeD,EAAAA,GAAAA,OAAH,yzBAwCZE,EAAQF,EAAAA,GAAAA,MAAH,kV,mBChDLG,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAkBMC,EAAY,WAChBD,EAAe,GAChB,EAED,OACE,UAACR,EAAD,CAAMK,SAjBa,SAAAK,GAGnB,GAFAA,EAAMC,iBAEqB,KAAvBJ,EAAYK,OAGd,OAFAC,EAAAA,GAAAA,MAAY,kCACZJ,IAGFJ,EAASE,GACTE,GACD,EAOC,WACE,SAACN,EAAD,CACEW,SAvBe,SAAAJ,GACnBF,EAAeE,EAAMK,OAAOC,MAAMC,cACnC,EAsBKD,MAAOT,EACPW,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,+BAGd,SAACnB,EAAD,CAAcgB,KAAK,SAAnB,UACE,SAAC,MAAD,QAIP,E,wCCzCYI,EAAgBrB,EAAAA,GAAAA,IAAH,oDAebsB,GAXQtB,EAAAA,GAAAA,GAAH,wMAWOA,EAAAA,GAAAA,GAAH,uLAWTuB,EAAYvB,EAAAA,GAAAA,GAAH,mTAaTwB,GAAYxB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,CAAH,8KAST0B,EAAa1B,EAAAA,GAAAA,IAAH,2FAMV2B,EAAa3B,EAAAA,GAAAA,EAAH,sICcvB,EAxDe,WAAO,IAAD,EACnB,GAA0CK,EAAAA,EAAAA,UAAS,IAAnD,eAAOuB,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3CC,GAAWC,EAAAA,EAAAA,MAyBjB,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBJ,EAAoB,CACtB,IAAMK,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAeN,GAFxB,gBAENO,EAFM,EAENA,KACRX,EAAiBW,EAAKC,SAHR,gDAUdC,QAAQC,IAAR,MAVc,yDAAH,qDAafL,EAAUL,EACX,CACF,GAAE,CAACA,KAGF,UAACZ,EAAD,YACE,SAAClB,EAAD,CAAYC,SAzBK,SAAA6B,GACnBD,EAAgC,KAAhBC,EAAqB,CAAEW,MAAOX,GAAgB,CAAC,EAChE,KAwBG,SAACX,EAAD,UACGM,EAAciB,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MACrC,OACE,SAACzB,EAAD,WACE,UAACC,EAAD,CAAWyB,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAMhB,GAAvC,WACE,SAACT,EAAD,CACE0B,IACEL,EAAW,yCAC2BA,GAClCM,EAENC,IAAKN,KAEP,SAACrB,EAAD,UAAaqB,QAVDF,EAcnB,QAIR,C","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  @media (min-width: 768px) {\n    gap: 30px;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  align-items: center;\n  padding-top: 5px;\n  cursor: pointer;\n  position: relative;\n  width: 60px;\n  height: 30px;\n  font-size: 20px;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  background: linear-gradient(to right, #e13c52 50%, transparent 50%);\n  background-color: rgba(0, 0, 0, 1);\n  background-size: 200% 100%;\n  background-position: 100% 0;\n  transition: all 0.5s ease;\n\n  :before {\n    position: absolute;\n    justify-content: center;\n    top: 2px;\n    bottom: 2px;\n    left: 2px;\n    right: 2px;\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n  :active,\n  :focus,\n  :hover {\n    border: none;\n    background-position: 0 0;\n    color: white;\n    transition: all 0.5s ease;\n  }\n  @media (min-width: 767px) {\n    height: 37px;\n    width: 80px;\n  }\n`;\n\nexport const Input = styled.input`\n  text-align: center;\n  padding: 5px 10px;\n  font-size: 14px;\n  margin-top: 0;\n  outline: none;\n  border-color: black;\n  border-radius: 20px;\n\n  width: 180px;\n\n  :focus {\n    outline: none;\n    border-color: #e13c52;\n  }\n\n  @media (min-width: 767px) {\n    width: 250px;\n    font-size: 20px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { Input, SubmitButton, Form } from './SearchForm.styled';\nimport { BsSearch } from 'react-icons/bs';\nexport const SearchForm = ({ onSubmit }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleChange = event => {\n    setSearchValue(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchValue.trim() === '') {\n      toast.error('Please enter your request');\n      resetForm();\n      return;\n    }\n    onSubmit(searchValue);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setSearchValue('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        onChange={handleChange}\n        value={searchValue}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Please enter your request\"\n      />\n\n      <SubmitButton type=\"submit\">\n        <BsSearch />\n      </SubmitButton>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesWrapper = styled.div`\n  padding: 140px 0 40px 0;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin: 0 0 20px 0;\n  color: #fff;\n\n  font-family: 'Ubuntu';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 32px;\n  line-height: 37px;\n`;\nexport const MovieList = styled.ul`\n  padding: 30px 0;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 25px;\n  list-style: none;\n  text-align: center;\n`;\n\nexport const MovieItem = styled.li`\n  background-color: #000;\n  width: 231px;\n  border-radius: 4px;\n  transition: all 0.25s ease-out;\n  :hover {\n    transform: scale(1.02);\n    transition: all 0.25s ease-out;\n    box-shadow: 0 14px 28px rgba(255, 60, 82, 0.25),\n      0 10px 10px rgba(255, 60, 82, 0.25);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: block;\n  text-decoration: none;\n  color: #fff;\n  transition: all 0.25s ease-out;\n  :hover {\n    transition: all 0.25s ease-out;\n  }\n`;\nexport const MovieImage = styled.img`\n  display: block;\n  width: 231px;\n  border-radius: 4px 4px 0 0;\n`;\n\nexport const MovieTitle = styled.p`\n  margin: 0;\n  padding: 10px 0 10px 0;\n  font-family: 'Ubuntu';\n  font-style: normal;\n  font-size: 14px;\n`;\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'services/movieAPI';\nimport NoPoster from '../../images/NoPoster.png';\nimport {\n  MovieImage,\n  MovieItem,\n  MovieLink,\n  MovieList,\n  MoviesWrapper,\n  MovieTitle,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchMovie = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const handleSubmit = searchMovie => {\n    setSearchParams(searchMovie !== '' ? { query: searchMovie } : {});\n  };\n\n  useEffect(() => {\n    if (searchMovie !== '') {\n      const fetchData = async () => {\n        try {\n          const { data } = await getSearchMovie(searchMovie);\n          setSearchResults(data.results);\n\n          // console.log(data.results);\n          // if (data.results.length === 0) {\n          //   toast.warn('Error');\n          // }\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      fetchData(searchMovie);\n    }\n  }, [searchMovie]);\n\n  return (\n    <MoviesWrapper>\n      <SearchForm onSubmit={handleSubmit}></SearchForm>\n      <MovieList>\n        {searchResults.map(({ id, poster_path, title }) => {\n          return (\n            <MovieItem key={id}>\n              <MovieLink to={`${id}`} state={{ from: location }}>\n                <MovieImage\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w342${poster_path}`\n                      : NoPoster\n                  }\n                  alt={title}\n                />\n                <MovieTitle>{title}</MovieTitle>\n              </MovieLink>\n            </MovieItem>\n          );\n        })}\n      </MovieList>\n    </MoviesWrapper>\n  );\n};\n\nexport default Movies;\n"],"names":["Form","styled","SubmitButton","Input","SearchForm","onSubmit","useState","searchValue","setSearchValue","resetForm","event","preventDefault","trim","toast","onChange","target","value","toLowerCase","type","autoComplete","autoFocus","placeholder","MoviesWrapper","MovieList","MovieItem","MovieLink","Link","MovieImage","MovieTitle","searchResults","setSearchResults","useSearchParams","searchParams","setSearchParams","searchMovie","get","location","useLocation","useEffect","fetchData","getSearchMovie","data","results","console","log","query","map","id","poster_path","title","to","state","from","src","NoPoster","alt"],"sourceRoot":""}