{"version":3,"file":"static/js/736.7aea9285.chunk.js","mappings":"8SAEaA,EAAcC,EAAAA,GAAAA,IAAH,6DAKXC,EAAWD,EAAAA,GAAAA,GAAH,iKAURE,EAAWF,EAAAA,GAAAA,GAAH,gGAKRG,EAAQH,EAAAA,GAAAA,IAAH,4GAMLI,EAAOJ,EAAAA,GAAAA,EAAH,6HAQJK,EAAYL,EAAAA,GAAAA,EAAH,6H,SCsBtB,EA5Ca,WACX,OAAsCM,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,IAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAkBJ,GAF3B,gBAENK,EAFM,EAENA,KACRN,EAAeM,EAAKC,MAHN,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfL,GACD,GAAE,CAACH,IAECF,EAIL,OACE,UAACR,EAAD,WAC0B,IAAvBQ,EAAYW,SAAgB,SAAC,KAAD,6BAC7B,SAACjB,EAAD,UACGM,EAAYY,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC1C,OACE,UAACrB,EAAD,YACE,SAACC,EAAD,CACEqB,IACEH,EAAY,yCAC0BA,GAClCI,EAENC,IAAKJ,KAEP,SAAClB,EAAD,UAAOkB,KACP,SAACjB,EAAD,UAAYkB,MAVCH,EAalB,QAIR,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastWrapper = styled.div`\n  margin: 0 auto;\n  padding: 30px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  list-style: none;\n  margin: 0 auto;\n  max-width: 1200px;\n  text-align: center;\n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n  background-color: #ffffff30;\n  border-radius: 6px;\n`;\nexport const Photo = styled.img`\n  display: block;\n  width: 100%;\n  height: 300px;\n  border-radius: 4px 4px 0 0;\n`;\nexport const Name = styled.p`\n  color: #fff;\n  margin: 8px;\n  font-family: 'Ubuntu';\n  font-style: normal;\n  font-size: 14px;\n`;\n\nexport const Character = styled.p`\n  color: #fff;\n  margin: 8px;\n  font-family: 'Ubuntu';\n  font-style: normal;\n  font-size: 14px;\n`;\n","import { Title } from 'pages/HomePage/HomePage.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieByCredits } from 'services/movieAPI';\nimport NoPhoto from '../../images/NoPhoto.jpg';\nimport {\n  CastItem,\n  CastList,\n  CastWrapper,\n  Character,\n  Name,\n  Photo,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [castDetails, setCastDetails] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await getMovieByCredits(movieId);\n        setCastDetails(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  if (!castDetails) {\n    return;\n  }\n\n  return (\n    <CastWrapper>\n      {castDetails.length === 0 && <Title>No cast found</Title>}\n      <CastList>\n        {castDetails.map(({ id, profile_path, name, character }) => {\n          return (\n            <CastItem key={id}>\n              <Photo\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w342${profile_path}`\n                    : NoPhoto\n                }\n                alt={name}\n              />\n              <Name>{name}</Name>\n              <Character>{character}</Character>\n            </CastItem>\n          );\n        })}\n      </CastList>\n    </CastWrapper>\n  );\n};\nexport default Cast;\n"],"names":["CastWrapper","styled","CastList","CastItem","Photo","Name","Character","useState","castDetails","setCastDetails","movieId","useParams","useEffect","fetchData","getMovieByCredits","data","cast","console","log","length","map","id","profile_path","name","character","src","NoPhoto","alt"],"sourceRoot":""}