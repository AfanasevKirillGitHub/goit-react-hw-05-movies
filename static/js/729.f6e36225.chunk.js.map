{"version":3,"file":"static/js/729.f6e36225.chunk.js","mappings":"0OA8EA,UAnEqB,WAAO,IAAD,IACzB,GAAwCA,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAclD,IAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAaV,GAFtB,gBAENW,EAFM,EAENA,KACRZ,EAAgBY,GAHF,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfJ,GACD,GAAE,CAACT,IAECF,EAAL,CAGA,IAAQgB,EACNhB,EADMgB,YAAaC,EACnBjB,EADmBiB,MAAOC,EAC1BlB,EAD0BkB,aAAcC,EACxCnB,EADwCmB,aAAcC,EACtDpB,EADsDoB,SAAUC,EAChErB,EADgEqB,OAGlE,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIhB,EAAWiB,QAArB,sBACA,4BACE,gBACEC,IACER,EAAW,yCAC2BA,GAClCS,EAENC,IAAKT,KAEP,4BACE,0BACGA,EADH,KACYC,EAAY,UAAMA,EAAaS,MAAM,EAAG,IAAO,UAD3D,QAGA,uCAAeC,KAAKC,MAAqB,GAAfV,GAA1B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBACGC,EAAOS,OAAS,EACbT,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OAAkB,gCAAiBD,EAAjB,MAAWC,EAA7B,IACX,uCAIV,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASX,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,8BAIN,SAAC,KAAD,MA1CH,CA6CF,C","sources":["pages/Movies/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieById } from 'services/movieAPI';\nimport NoPoster from '../../../images/NoPoster.png';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBackHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await getMovieById(movieId);\n        setMovieDetails(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return;\n  }\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieDetails;\n\n  return (\n    <>\n      <Link to={goBackHref.current}>Go back</Link>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w342${poster_path}`\n              : NoPoster\n          }\n          alt={title}\n        />\n        <div>\n          <h2>\n            {title} ({release_date ? `${release_date.slice(0, 4)}` : 'no info'})\n          </h2>\n          <p>User Score {Math.round(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {genres.length > 0\n              ? genres.map(({ name, id }) => <span key={id}> {name} </span>)\n              : 'No information about genres'}\n          </p>\n        </div>\n      </div>\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","goBackHref","useRef","state","from","useEffect","fetchData","getMovieById","data","console","log","poster_path","title","release_date","vote_average","overview","genres","to","current","src","NoPoster","alt","slice","Math","round","length","map","name","id"],"sourceRoot":""}